{"ast":null,"code":"var _jsxFileName = \"/home/kamil/ochrona/frontend/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [qrCode, setQrCode] = useState(null);\n  const [step, setStep] = useState(1);\n  const handleRegister = async e => {\n    e.preventDefault();\n    const response = await fetch('http://127.0.0.1:5000/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setQrCode(data.qr_code);\n      setMessage(data.message);\n      setStep(2);\n    } else {\n      setMessage(data.error || 'Registration failed.');\n    }\n  };\n  const handleVerifyTotp = async e => {\n    e.preventDefault();\n    const totpCode = prompt('Enter the code from your authernticator app:');\n    const response = await fetch('http://127.0.0.1:5000/register/verify-totp', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        totp_code: totpCode\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setMessage('Registration complete! You can now log in.');\n      setStep(3);\n    } else {\n      setMessage(data.error || 'Verification failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleRegister,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scan QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), qrCode && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${qrCode}`,\n        alt: \"Scan QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVerifyTotp,\n        children: \"Verify TOTP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already an awesome member? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Back to \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: \"Home page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"dMB7F+TX8UztS0RWezLMIgpaEOo=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","message","setMessage","qrCode","setQrCode","step","setStep","handleRegister","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","qr_code","error","handleVerifyTotp","totpCode","prompt","totp_code","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","src","alt","onClick","to","_c","$RefreshReg$"],"sources":["/home/kamil/ochrona/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nconst Register = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [qrCode, setQrCode] = useState(null);\n  const [step, setStep] = useState(1);\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    \n    const response = await fetch('http://127.0.0.1:5000/register', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password }),\n    });\n\n    const data = await response.json();\n    if (response.ok) {\n      setQrCode(data.qr_code);\n      setMessage(data.message);\n      setStep(2);\n    } else {\n      setMessage(data.error || 'Registration failed.');\n    }\n  };\n\n  const handleVerifyTotp = async (e) => {\n    e.preventDefault();\n\n    const totpCode = prompt('Enter the code from your authernticator app:');\n    const response = await fetch('http://127.0.0.1:5000/register/verify-totp', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, totp_code: totpCode }),\n    });\n\n    const data = await response.json();\n    if (response.ok) {\n      setMessage('Registration complete! You can now log in.');\n      setStep(3);\n    } else {\n      setMessage(data.error || 'Verification failed.');\n    }\n  };\n\n\n  return (\n    <div>\n      <h2>Register</h2>\n      {step === 1 && (\n        <form onSubmit={handleRegister}>\n          <input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <button type=\"submit\">Register</button>\n        </form>\n      )}\n      {step === 2 && (\n        <div>\n          <h2>Scan QR Code</h2>\n          {qrCode && <img src={`data:image/png;base64,${qrCode}`} alt=\"Scan QR Code\" />}\n          <button onClick={handleVerifyTotp}>Verify TOTP</button>\n        </div>\n      )}\n      {message && <p>{message}</p>}\n      <p>\n        Already an awesome member? <Link to=\"/login\">Login here</Link>\n      </p>\n      <p>\n        Back to <Link to=\"/\">Home page</Link>\n      </p>\n    </div>\n  );\n};\n\nexport default Register;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}